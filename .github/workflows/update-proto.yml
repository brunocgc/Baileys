name: Update WA Proto Files

on:
  push:
    tags:
      - "v*"

jobs:
  update-proto:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Baileys repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}
          path: baileys

      - name: Clone WAProtoGen repository
        uses: actions/checkout@v4
        with:
          repository: wppconnect-team/WAProtoGen
          path: WAProtoGen

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: WAProtoGen/yarn.lock

      - name: Install dependencies in WAProtoGen
        working-directory: WAProtoGen
        run: yarn install --frozen-lockfile

      - name: Build WAProtoGen
        working-directory: WAProtoGen
        run: yarn build

      - name: Copy WAProto.proto to Baileys
        run: |
          cp WAProtoGen/WAProto.proto baileys/WAProto/WAProto.proto


      - name: Copy index files from dist to Baileys
        run: |
          cp WAProtoGen/dist/index.js baileys/WAProto/index.js
          cp WAProtoGen/dist/index.d.ts baileys/WAProto/index.d.ts

      - name: Extract and update WhatsApp version
        run: |
          # Buscar por "WhatsApp Version" no WAProto.proto
          VERSION_LINE=$(grep -i "WhatsApp Version" baileys/WAProto/WAProto.proto || echo "")

          if [ -n "$VERSION_LINE" ]; then
            echo "Found version line: $VERSION_LINE"

            # Extrair a vers√£o usando regex (formato: 2.3000.1024069866)
            VERSION=$(echo "$VERSION_LINE" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)

            if [ -n "$VERSION" ]; then
              echo "Extracted version: $VERSION"

              # Dividir a vers√£o em partes
              IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

              # Atualizar o baileys-version.json
              cat > baileys/src/Defaults/baileys-version.json << EOF
          {
          	"version": [$MAJOR,$MINOR,$PATCH]
          }
          EOF

              echo "Updated baileys-version.json with version: [$MAJOR,$MINOR,$PATCH]"
            else
              echo "Could not extract version number from: $VERSION_LINE"
            fi
          else
            echo "WhatsApp Version line not found in WAProto.proto"
            # Verificar se existe na linha 4 especificamente
            LINE_4=$(sed -n '4p' baileys/WAProto/WAProto.proto)
            echo "Line 4 content: $LINE_4"

            VERSION_LINE_4=$(echo "$LINE_4" | grep -i "WhatsApp Version" || echo "")
            if [ -n "$VERSION_LINE_4" ]; then
              echo "Found version in line 4: $VERSION_LINE_4"
              VERSION=$(echo "$VERSION_LINE_4" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)

              if [ -n "$VERSION" ]; then
                echo "Extracted version from line 4: $VERSION"

                IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

                cat > baileys/src/Defaults/baileys-version.json << EOF
          {
          	"version": [$MAJOR,$MINOR,$PATCH]
          }          EOF
              echo "Updated baileys-version.json with version from line 4: [$MAJOR,$MINOR,$PATCH]"
              fi
            fi
          fi

      - name: Check for changes
        id: check_changes
        working-directory: baileys
        run: |
          git add WAProto/ src/Defaults/baileys-version.json
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in WAProto files or baileys-version.json"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in WAProto files or baileys-version.json"
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        working-directory: baileys
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add WAProto/ src/Defaults/baileys-version.json
          git commit -m "chore: update WAProto files from WAProtoGen repository

          - Updated WAProto.proto
          - Updated index.js and index.d.ts from dist folder
          - Updated baileys-version.json with latest WhatsApp version

          Auto-generated by update-proto workflow"
          git push

      - name: Create Pull Request (optional)
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          path: baileys
          token: ${{ secrets.GIT_TOKEN }}
          commit-message: "chore: update WAProto files from WAProtoGen repository"
          title: "ü§ñ Auto-update WAProto files"
          body: |
            ## üîÑ Automated WAProto Update

            Este PR foi criado automaticamente pelo workflow `update-proto`.

            ### Altera√ß√µes:
            - ‚úÖ Atualizado `WAProto/WAProto.proto`
            - ‚úÖ Atualizado `WAProto/index.js`
            - ‚úÖ Atualizado `WAProto/index.d.ts`
            - ‚úÖ Atualizado `src/Defaults/baileys-version.json` com a vers√£o mais recente do WhatsApp

            ### Origem:
            - Reposit√≥rio: https://github.com/wppconnect-team/WAProtoGen.git
            - Data da execu√ß√£o: ${{ github.run_id }}

            ‚ö†Ô∏è **Revisar antes de fazer merge!**
          branch: auto-update-proto
          delete-branch: true